网盘4.0架构流程设计(以实际为准)

使用方法(重要):

    注:使用前请确保client文件夹内的login_mutex文件内为'0',否则会卡在。
	同时，登录成功后最好使用quit安全退出接口，否则可能发生未知错误。
	所有指令都对大小写和空格敏感！
	puts和gets过程中可以发出命令，但是文件较大时，发出过多指令可能导致堵塞。
	server的main.c中的头部和尾部有用goto label做成的简易检索表以供查看代码方便
    -----------------------------------------------------------------------
    -------Someone else is preparing to login/regist/quit,please wait------
    -----------------------------------------------------------------------

    1.服务器端 ./GreatServer <ip> <port> 5 10 运行
    2.客户端 ./client <ip> <port> 运行
    3.将想传进网盘的文件放进client_file，即可用puts指令放进网盘

        如下为登录界面:
    -----------------------------------------------------------------------
    -------------------------WELCOME TO PHB_NET_DISK-----------------------
    -----------------------------------------------------------------------
    login or register or quit (enter l/r/q):

    !注意!: 如果多用户同时进入登录界面,必须等先进入的用户离开该界面,其他用户才能够进入
            如果已经有用户正停留在登录界面,给出如下提示并等待之前的用户退出该界面
            此时可以用信号SIGINT退出等待

            -----------------------------------------------------------------------
            -------Someone else is preparing to login/regist/quit,please wait------
            -----------------------------------------------------------------------

            同时,请确保每次进入登录界面,都请完成l/r/q操作之后再进行其他客户端的操作
            即把登录界面的操作当做"原子操作"


        如下为登录成功的提示:
    ***********************************************************************
    ---------------Hello, user xzh ! Welcome to PHB_NET_DISK!---------------
    ---------------------(Enter 'quit' to leave!!!)------------------------
    ***********************************************************************

    ***********************************************************************
    --------- HELP: -------------------------------------------------------
    -------------- cd .. ---- cd <dirname> ------ cd / --------------------
    -------------- ls-------- remove <filename> - pwd ---------------------
    -------------- quit ----- gets <filename> --- puts <filename> ---------
    -------------- relogin -- mkdir <dirname> --- rmdir <dirname> ---------
    -------------- help ---------------------------------------------------
    ***********************************************************************
    
        如果登录成功后又有用户在登录界面,会显示如下提示:
    -----------------------------------------------------------------------
    -------Someone else is preparing to login/regist/quit,please wait------
    -----------------------------------------------------------------------
        此时输入指令无效

        如果此时没有用户在登陆界面了,会!自动!显示如下提示:
    -----------------------------------------------------------------------
    -----------------------You can enter command now!----------------------
    -----------------------------------------------------------------------
        此时输入指令有效

    !注意!:
            command list里给出了支持的所有指令
            可以输入help获取command list
            支持多用户同时操作(全部登录成功后才可以.算是一个不足,但是改起来有些麻烦,故我只用文件锁做了互斥)
            客户端在登录后只能利用quit安全退出接口来退出程序!(信号已屏蔽))

客户端设计:

    运行后可执行:
        1.登录.
        2.注册,注册完自动登录.
        3.退出,终止登录,退出程序.

    登录后可执行:
    ***********************************************************************
    --------- HELP: -------------------------------------------------------
    -------------- cd .. ---- cd <dirname> ------ cd / --------------------
    -------------- ls-------- remove <filename> - pwd ---------------------
    -------------- quit ----- gets <filename> --- puts <filename> ---------
    -------------- relogin -- mkdir <dirname> --- rmdir <dirname> ---------
    -------------- help ---------------------------------------------------
    ***********************************************************************
        

服务端设计:

        epoll监视新连接与已连接的new_fd

        有新的连接请求时,根据发来的火车类型判断是什么指令:
            1.用户登录时从数据库找到对应的用户名,利用salt机制检查密码,正确就登陆成功.记录登陆日志
              头插法把带有new_fd等信息的client结点加入client队列.
            2.用户注册时,根据用户名和密码生成salt和秘钥等信息,存入数据库,注册完的同时也登录成功.记录登陆日志.
              头插法把带有new_fd等信息的client结点加入client队列.
            3.用户退出时,释放对应的new_fd.

        有被监控的new_fd发来数据时,根据发来的火车类型判断是什么指令,运行完毕后记录日志:
            1.pwd,发该new_fd对应的最新的client结点内存储的path.
            2.relogin,关闭当前new_fd,直接continue检查下一个evs.
            3.quit,安全退出接口,关闭当前new_fd,continue.
            4.cd,三种,分别是上级目录,根目录,指定目录
            5.ls,根据code,userID从数据库中找到对应的行,用sprintf整合后存入火车发给客户端
            6.remove,删除指定文件,并将对应文件的linknum减1,减到0就会删除源文件
            7.puts，把client_file文件夹里的对应文件放进网盘，过程中可以发出命令，但是发出过多指令可能导致堵塞
            8.gets，把网盘中的文件放进client_file文件夹，过程中可以发出命令，但是发出过多指令可能导致堵塞
            9.rmdir,删除当前目录下一个非空文件夹
            10.mkdir,在当前目录创建一个空文件夹

还未实现：30s自动断开
	puts和gets完全不会影响其他命令
	等

	第一次写项目，还望各位读者多多指正。^_^